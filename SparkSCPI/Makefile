#############################################################################
# Makefile for building: spark
# Generated by qmake (2.01a) (Qt 4.6.2) on: Wed Aug 10 09:58:00 2016
# Project:  spark.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -unix -o Makefile spark.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I/usr/include/qwt-qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -l qwt-qt4 -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		spark.cpp \
		kiss_fft130/kiss_fft.c \
		about.cpp \
		console.cpp \
		reboot.cpp \
		help.cpp moc_spark.cpp \
		moc_about.cpp \
		moc_console.cpp \
		moc_reboot.cpp \
		moc_help.cpp \
		qrc_images.cpp
OBJECTS       = main.o \
		spark.o \
		kiss_fft.o \
		about.o \
		console.o \
		reboot.o \
		help.o \
		moc_spark.o \
		moc_about.o \
		moc_console.o \
		moc_reboot.o \
		moc_help.o \
		qrc_images.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		spark.pro
QMAKE_TARGET  = spark
DESTDIR       = 
TARGET        = spark

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_spark.h ui_about.h ui_console.h ui_reboot.h ui_help.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: spark.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix -o Makefile spark.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix -o Makefile spark.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/spark1.0.0 || $(MKDIR) .tmp/spark1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/spark1.0.0/ && $(COPY_FILE) --parents spark.h about.h console.h reboot.h help.h .tmp/spark1.0.0/ && $(COPY_FILE) --parents images.qrc .tmp/spark1.0.0/ && $(COPY_FILE) --parents main.cpp spark.cpp kiss_fft130/kiss_fft.c about.cpp console.cpp reboot.cpp help.cpp .tmp/spark1.0.0/ && $(COPY_FILE) --parents spark.ui about.ui console.ui reboot.ui help.ui .tmp/spark1.0.0/ && (cd `dirname .tmp/spark1.0.0` && $(TAR) spark1.0.0.tar spark1.0.0 && $(COMPRESS) spark1.0.0.tar) && $(MOVE) `dirname .tmp/spark1.0.0`/spark1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/spark1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_spark.cpp moc_about.cpp moc_console.cpp moc_reboot.cpp moc_help.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_spark.cpp moc_about.cpp moc_console.cpp moc_reboot.cpp moc_help.cpp
moc_spark.cpp: kiss_fft130/kiss_fft.h \
		about.h \
		console.h \
		reboot.h \
		help.h \
		spark.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) spark.h -o moc_spark.cpp

moc_about.cpp: about.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) about.h -o moc_about.cpp

moc_console.cpp: console.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) console.h -o moc_console.cpp

moc_reboot.cpp: reboot.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) reboot.h -o moc_reboot.cpp

moc_help.cpp: help.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) help.h -o moc_help.cpp

compiler_rcc_make_all: qrc_images.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_images.cpp
qrc_images.cpp: images.qrc \
		images/read.png \
		images/maf_processing.png \
		images/boot-up.png \
		images/set.png \
		images/reboot.png \
		images/save.png \
		images/start_device.png \
		images/trigger.png \
		images/read_from.png \
		images/reset.png \
		images/processing.png
	/usr/bin/rcc -name images images.qrc -o qrc_images.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_spark.h ui_about.h ui_console.h ui_reboot.h ui_help.h
compiler_uic_clean:
	-$(DEL_FILE) ui_spark.h ui_about.h ui_console.h ui_reboot.h ui_help.h
ui_spark.h: spark.ui
	/usr/bin/uic-qt4 spark.ui -o ui_spark.h

ui_about.h: about.ui
	/usr/bin/uic-qt4 about.ui -o ui_about.h

ui_console.h: console.ui
	/usr/bin/uic-qt4 console.ui -o ui_console.h

ui_reboot.h: reboot.ui
	/usr/bin/uic-qt4 reboot.ui -o ui_reboot.h

ui_help.h: help.ui
	/usr/bin/uic-qt4 help.ui -o ui_help.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp spark.h \
		kiss_fft130/kiss_fft.h \
		about.h \
		console.h \
		reboot.h \
		help.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

spark.o: spark.cpp spark.h \
		kiss_fft130/kiss_fft.h \
		about.h \
		console.h \
		reboot.h \
		help.h \
		ui_spark.h \
		ui_about.h \
		ui_reboot.h \
		ui_console.h \
		ui_help.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spark.o spark.cpp

kiss_fft.o: kiss_fft130/kiss_fft.c kiss_fft130/_kiss_fft_guts.h \
		kiss_fft130/kiss_fft.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o kiss_fft.o kiss_fft130/kiss_fft.c

about.o: about.cpp about.h \
		ui_about.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o about.o about.cpp

console.o: console.cpp console.h \
		ui_console.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o console.o console.cpp

reboot.o: reboot.cpp reboot.h \
		ui_reboot.h \
		spark.h \
		kiss_fft130/kiss_fft.h \
		about.h \
		console.h \
		help.h \
		ui_spark.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o reboot.o reboot.cpp

help.o: help.cpp help.h \
		ui_help.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o help.o help.cpp

moc_spark.o: moc_spark.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_spark.o moc_spark.cpp

moc_about.o: moc_about.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_about.o moc_about.cpp

moc_console.o: moc_console.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_console.o moc_console.cpp

moc_reboot.o: moc_reboot.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_reboot.o moc_reboot.cpp

moc_help.o: moc_help.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_help.o moc_help.cpp

qrc_images.o: qrc_images.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_images.o qrc_images.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

